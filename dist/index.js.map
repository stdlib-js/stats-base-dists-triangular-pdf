{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/factory.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math-base-assert-is-nan' );\n\n\n// MAIN //\n\n/**\n* Evaluates the probability density function (PDF) for a triangular distribution with lower limit `a` and upper limit `b` and mode `c` at a value `x`.\n*\n* @param {number} x - input value\n* @param {number} a - lower limit\n* @param {number} b - upper limit\n* @param {number} c - mode\n* @returns {number} evaluated PDF\n*\n* @example\n* var y = pdf( 0.5, -1.0, 1.0, 0.0 );\n* // returns 0.5\n*\n* @example\n* var y = pdf( 0.5, -1.0, 1.0, 0.5 );\n* // returns 1.0\n*\n* @example\n* var y = pdf( -10.0, -20.0, 0.0, -2.0 );\n* // returns ~0.056\n*\n* @example\n* var y = pdf( -2.0, -1.0, 1.0, 0.0 );\n* // returns 0.0\n*\n* @example\n* var y = pdf( NaN, 0.0, 1.0, 0.5 );\n* // returns NaN\n*\n* @example\n* var y = pdf( 0.0, NaN, 1.0, 0.5 );\n* // returns NaN\n*\n* @example\n* var y = pdf( 0.0, 0.0, NaN, 0.5 );\n* // returns NaN\n*\n* @example\n* var y = pdf( 2.0, 1.0, 0.0, NaN );\n* // returns NaN\n*\n* @example\n* var y = pdf( 2.0, 1.0, 0.0, 1.5 );\n* // returns NaN\n*/\nfunction pdf( x, a, b, c ) {\n\tif (\n\t\tisnan( x ) ||\n\t\tisnan( a ) ||\n\t\tisnan( b ) ||\n\t\tisnan( c ) ||\n\t\ta > c ||\n\t\tc > b\n\t) {\n\t\treturn NaN;\n\t}\n\tif ( x < a ) {\n\t\treturn 0.0;\n\t}\n\t// Case: x >= a\n\tif ( x < c ) {\n\t\treturn ( 2.0 * ( x - a ) ) / ( ( b - a ) * ( c - a ) );\n\t}\n\tif ( x === c ) {\n\t\treturn 2.0 / ( b - a );\n\t}\n\t// Case: x > c\n\tif ( x <= b ) {\n\t\treturn ( 2.0 * ( b - x ) ) / ( ( b - a ) * ( b - c ) );\n\t}\n\t// Case: x > b\n\treturn 0.0;\n}\n\n\n// EXPORTS //\n\nmodule.exports = pdf;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar constantFunction = require( '@stdlib/utils-constant-function' );\nvar isnan = require( '@stdlib/math-base-assert-is-nan' );\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the probability density function (PDF) for a triangular distribution with lower limit `a` and upper limit `b` and mode `c`.\n*\n* @param {number} a - lower limit\n* @param {number} b - upper limit\n* @param {number} c - mode\n* @returns {Function} PDF\n*\n* @example\n* var pdf = factory( 0.0, 10.0, 5.0 );\n* var y = pdf( 2.0 );\n* // returns 0.08\n*\n* y = pdf( 12.0 );\n* // returns 0.0\n*/\nfunction factory( a, b, c ) {\n\tvar denom1;\n\tvar denom2;\n\tvar denom3;\n\n\tif (\n\t\tisnan( a ) ||\n\t\tisnan( b ) ||\n\t\tisnan( c ) ||\n\t\ta > c ||\n\t\tc > b\n\t) {\n\t\treturn constantFunction( NaN );\n\t}\n\n\tdenom1 = ( b - a ) * ( c - a );\n\tdenom2 = b - a;\n\tdenom3 = ( b - a ) * ( b - c );\n\treturn pdf;\n\n\t/**\n\t* Evaluates the probability density function (PDF) for a triangular distribution.\n\t*\n\t* @private\n\t* @param {number} x - input value\n\t* @returns {number} evaluated PDF\n\t*\n\t* @example\n\t* var y = pdf( 12.0 );\n\t* // returns <number>\n\t*/\n\tfunction pdf( x ) {\n\t\tif ( isnan( x ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\tif ( x < a ) {\n\t\t\treturn 0.0;\n\t\t}\n\t\t// Case: x >= a\n\t\tif ( x < c ) {\n\t\t\treturn 2.0 * ( x - a ) / denom1;\n\t\t}\n\t\tif ( x === c ) {\n\t\t\treturn 2.0 / denom2;\n\t\t}\n\t\t// Case: x > c\n\t\tif ( x <= b ) {\n\t\t\treturn 2.0 * ( b - x ) / denom3;\n\t\t}\n\t\t// Case: x > b\n\t\treturn 0.0;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = factory;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Triangular distribution probability density function (PDF).\n*\n* @module @stdlib/stats-base-dists-triangular-pdf\n*\n* @example\n* var pdf = require( '@stdlib/stats-base-dists-triangular-pdf' );\n*\n* var y = pdf( 0.5, -1.0, 1.0, 0.0 );\n* // returns 0.5\n*\n* y = pdf( 0.5, -1.0, 1.0, 0.5 );\n* // returns 1.0\n*\n* y = pdf( -10.0, -20.0, 0.0, -2.0 );\n* // returns ~0.056\n*\n* var mypdf = pdf.factory( 0.0, 10.0, 5.0 );\n* y = mypdf( 2.0 );\n* // returns 0.08\n*\n* y = mypdf( 12.0 );\n* // returns 0.0\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils-define-nonenumerable-read-only-property' );\nvar main = require( './main.js' );\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAQ,QAAS,iCAAkC,EAkDvD,SAASC,EAAKC,EAAGC,EAAGC,EAAGC,EAAI,CAC1B,OACCL,EAAOE,CAAE,GACTF,EAAOG,CAAE,GACTH,EAAOI,CAAE,GACTJ,EAAOK,CAAE,GACTF,EAAIE,GACJA,EAAID,EAEG,IAEHF,EAAIC,EACD,EAGHD,EAAIG,EACC,GAAQH,EAAIC,KAAYC,EAAID,IAAQE,EAAIF,IAE7CD,IAAMG,EACH,GAAQD,EAAID,GAGfD,GAAKE,EACA,GAAQA,EAAIF,KAAYE,EAAID,IAAQC,EAAIC,IAG3C,CACR,CAKAN,EAAO,QAAUE,ICxGjB,IAAAK,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAmB,QAAS,iCAAkC,EAC9DC,EAAQ,QAAS,iCAAkC,EAqBvD,SAASC,EAASC,EAAGC,EAAGC,EAAI,CAC3B,IAAIC,EACAC,EACAC,EAEJ,GACCP,EAAOE,CAAE,GACTF,EAAOG,CAAE,GACTH,EAAOI,CAAE,GACTF,EAAIE,GACJA,EAAID,EAEJ,OAAOJ,EAAkB,GAAI,EAG9B,OAAAM,GAAWF,EAAID,IAAQE,EAAIF,GAC3BI,EAASH,EAAID,EACbK,GAAWJ,EAAID,IAAQC,EAAIC,GACpBI,EAaP,SAASA,EAAKC,EAAI,CACjB,OAAKT,EAAOS,CAAE,EACN,IAEHA,EAAIP,EACD,EAGHO,EAAIL,EACD,GAAQK,EAAIP,GAAMG,EAErBI,IAAML,EACH,EAAME,EAGTG,GAAKN,EACF,GAAQA,EAAIM,GAAMF,EAGnB,CACR,CACD,CAKAT,EAAO,QAAUG,ICtDjB,IAAIS,EAAc,QAAS,uDAAwD,EAC/EC,EAAO,IACPC,EAAU,IAKdF,EAAaC,EAAM,UAAWC,CAAQ,EAKtC,OAAO,QAAUD",
  "names": ["require_main", "__commonJSMin", "exports", "module", "isnan", "pdf", "x", "a", "b", "c", "require_factory", "__commonJSMin", "exports", "module", "constantFunction", "isnan", "factory", "a", "b", "c", "denom1", "denom2", "denom3", "pdf", "x", "setReadOnly", "main", "factory"]
}
